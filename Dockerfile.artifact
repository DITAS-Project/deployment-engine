# Dockerfile for Python, Go and Ansible with the deployment engine, MongoDB in a parallel container.
# WIP = work in progress
# Artifact - executable + dependencies
FROM alpine:3.7

ENV ANSIBLE_VERSION 2.5.0

ENV BUILD_PACKAGES \
  bash \
  curl \
  tar \
  openssh-client \
  sshpass \
  git \
  python \
  py-boto \
  py-dateutil \
  py-httplib2 \
  py-jinja2 \
  py-paramiko \
  py-pip \
  py-yaml \
  ca-certificates

RUN echo "==> Adding build-dependencies..."
RUN apk --update add --virtual build-dependencies gcc musl-dev libffi-dev python-dev 

RUN echo "==> Upgrading apk and system..."  
RUN apk update && apk upgrade 

RUN echo "==> Adding Python runtime and packages..."
RUN apk add --no-cache ${BUILD_PACKAGES}
RUN pip install --upgrade pip
RUN pip install python-keyczar docker-py 

RUN echo "==> Adding Cloudsigma Python api..."
RUN pip install cloudsigma 

RUN echo "==> Installing Ansible..."
RUN pip install ansible==${ANSIBLE_VERSION} 

RUN echo "==> Cleaning up..."
RUN apk del .build-deps
RUN apk del build-dependencies
RUN rm -rf /var/cache/apk/*

RUN echo "==> Adding hosts for convenience..."
RUN mkdir -p /etc/ansible /ansible
RUN echo "[local]" >> /etc/ansible/hosts
RUN echo "localhost" >> /etc/ansible/hosts

ENV ANSIBLE_GATHERING smart
ENV ANSIBLE_HOST_KEY_CHECKING false
ENV ANSIBLE_RETRY_FILES_ENABLED false
ENV ANSIBLE_ROLES_PATH /ansible/playbooks/roles
ENV ANSIBLE_SSH_PIPELINING True
ENV PYTHONPATH /ansible/lib
ENV PATH /ansible/bin:$PATH
ENV ANSIBLE_LIBRARY /ansible/library

WORKDIR /deployment-engine/src
COPY /src/kubernetes /deployment-engine/src/kubernetes
COPY /src/deployment-engine /deployment-engine/src/deployment-engine
RUN git clone https://github.com/DITAS-Project/VDC-Shared-Config.git

VOLUME /root
EXPOSE 8080
#Trying to run the app when the container starts
RUN ["chmod", "+x", "/deployment-engine"]
CMD ["./deployment-engine"]
