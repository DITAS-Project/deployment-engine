---

#  - name: Run docker and kubernetes deployment
#    become: yes
#    hosts: all
#    roles:
#     - role: pre-deploy

  - hosts: [master]
    become: yes
    tasks:
      - name: using kubernetes init and gathering output info
        shell: kubeadm init --pod-network-cidr 10.244.0.0/16 | grep "kubeadm join"
        register: kube_join

      - name: setting variable to join other nodes
        set_fact: join_command="{{ kube_join.stdout }}"

  - hosts: [master]
    gather_facts: no
    tasks:

      - name: create .kube directory
        file:
          path: $HOME/.kube
          state: directory
          mode: 0755

      - name: copy admin.conf to user's kube config
        become: yes
        become_user: root
        become_method: sudo
        copy:
          src: /etc/kubernetes/admin.conf
          dest: /home/{{ masterUsername }}/.kube/config
          remote_src: yes
          owner: "{{ masterUsername }}"

      - name: copy flannel file
        copy:
          src: scripts/kube-flannel.yml
          dest: kube-flannel.yml

      - name: installing flannel and allowing access to cluster
        shell: kubectl apply -f kube-flannel.yml
      
      - name: taint cluster to allow pod deployments on master
        shell: kubectl taint nodes --all node-role.kubernetes.io/master-
      
      - name: getting slaves join command
        debug: msg={{ kube_join.stdout }}
        when: "'kubeadm join' in kube_join.stdout"


  # - hosts: [master]
  #   become: yes
  #   become_user: "{{ hostvars[groups['master'][0]]['ansible_ssh_user'] }}"
  #   tasks:
  #     - name: installing flannel and allowing access to cluster
  #       script: scripts/run.sh

  # - hosts: [master]
  #   become: yes
  #   become_user: "{{ hostvars[groups['master'][0]]['ansible_ssh_user'] }}"
  #   tasks:
  #     - name: getting slaves join command
  #       debug: msg={{ kube_join.stdout }}
  #       when: "'kubeadm join' in kube_join.stdout"

  - hosts: [slaves]
    become: yes
    gather_facts: no
    tasks:
      - name: joining nodes to cluster
        command: "{{ hostvars[groups['master'][0]]['join_command'] }}"

  - hosts: all
    tasks:
      - name: Create blueprint directory
        file:
          path: /home/{{ ansible_user }}/blueprint
          state: directory
          mode: "a+rw"

      - name: Copy blueprint file
        copy:
          src: "{{ blueprintId }}/blueprint.json"
          dest: /home/{{ ansible_user }}/blueprint/blueprint.json

      - name: Copy github json repo
        copy:
          src: VDC-Shared-Config
          dest: /home/{{ ansible_user }}/blueprint     
  
  - hosts: [master]
    tasks:
      - name: Copy VDM deployment
        template: src=scripts/vdm.yaml dest=vdm-{{ blueprintId }}.yaml

      - name: Add VDM
        shell: kubectl create -f vdm-{{ blueprintId }}.yaml


  - hosts: localhost
    tasks:
      - name: final
        debug:
          msg:
          - "Job done! You can now access cluster from master node! Now you can connect with:"
          - ssh {{ hostvars[groups['master'][0]]['ansible_user'] }}@{{ hostvars[groups['master'][0]]['ansible_host'] }}
          - ssh {{ hostvars[groups['slaves'][0]]['ansible_user'] }}@{{ hostvars[groups['slaves'][0]]['ansible_host'] }}
          - "For more machines refer to inventory file"
          - --------------------------
          - "You can use next commands now to check cluster status:"
          - kubectl get nodes -o wide
          - kubectl get pods --all-namespaces
          - kubectl cluster-info
          - --------------------------
